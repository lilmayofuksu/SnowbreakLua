---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lixiaohua.
--- DateTime: 2022/11/14 15:51
---

--- DS客戶端自动化测试代理
DSAutoTestAgent = DSAutoTestAgent or {}

DSAutoTestAgent.TemplateIdList = {
    281479271809025,    --1   里芙-星期三
    281483566776321,    --2   里芙-狂猎形态
    281479271874561,    --3   妮塔-四手
    281483566972929,    --4   茉莉安-雨燕形态
    281479272333313,    --5   肴-养生专家
    281479272071169,    --6   鸣濑晴-旧日王牌
    281479271940097,    --7   芙提雅-小太阳
    281479272136705,    --8   琴诺-双面
    281479271743489,    --9   安卡希雅-「不予显示」
    281479272202241,    --10  芬妮-黄金狮子
    281479272398849,    --11  恩雅-姐姐大人
    281479272005633,    --12  茉莉安-绷带小姐
    281479276331009,    --13  凌一-教官
    -- 281483567300609,    --14  肴冬至形态
    -- 281483567169537,    --15  芬妮-咎冠
    -- 281479272464385,    --16  猫汐尔
}

DSAutoTestAgent.lineupCharlist = { 1, 5, 9 }
-- DSAutoTestAgent.lineupChar = 1    -- 默认上阵哪个角色
-- DSAutoTestAgent.lineupChar2 = 5    --第二个角色
-- DSAutoTestAgent.lineupChar3 = 9    --第三个角色


DSAutoTestAgent.bOpenAutoAgent = false    --开关机器人
DSAutoTestAgent.AutoSwitchMap = false --自动切换地图开关 TODO:需要加入INI配置进行开关 DONE
DSAutoTestAgent.bLoginAndInitTeam = false  --开关外围自动登陆组队流程
DSAutoTestAgent.bRunNullRhi = false --机器人关闭渲染
DSAutoTestAgent.bGetAllItem = 0
DSAutoTestAgent.iRunDone = 0 -- 副本是否正常结束 0:第一次进游戏 1:进入联机房间 2：进入副本后 3：完成副本 
DSAutoTestAgent.bRunLoop = false -- 是否循环跑地图表开关
DSAutoTestAgent.bRandomLoop = false -- 从地图表里随机抽一个作为开始地图开关
DSAutoTestAgent.iDsMapID = 0 --设置开始地图
DSAutoTestAgent.iDsEndMapID = 0 --设置结束地图
DSAutoTestAgent.iSpecifyTime = -1 --设置每张图跑几次
DSAutoTestAgent.iCurrentRunTime = 0 --当前地图跑了几次
DSAutoTestAgent.bIsForceMapList = false -- 标记是否强制指定地图列表
DSAutoTestAgent.bSpecifyPlayerID = true -- 是否指定了玩家id
DSAutoTestAgent.iStartTime = 0 --设置开启房间时间戳

DSAutoTestAgent.bIsLogined = 0
DSAutoTestAgent.LoginToken = ""
DSAutoTestAgent.G_TokenPid = -1
DSAutoTestAgent.G_TokenPrefix = "TgameWu_"

DSAutoTestAgent.WaitRSP = 0 --服务器返回创建房间信息会重置为0
DSAutoTestAgent.nErrCode = 0
DSAutoTestAgent.nParam1 = 0
DSAutoTestAgent.bIsServerError = 0
DSAutoTestAgent.nState = -1

DSAutoTestAgent.tbCaptain = nil
DSAutoTestAgent.tbStateFlag = nil
DSAutoTestAgent.Index = 0 --主位少女

DSAutoTestAgent.CurrentMatchWaitTime = 0
DSAutoTestAgent.MaxMatchWaitTime = 300 --秒
DSAutoTestAgent.TeamSize = 3 -- 期望组队人数 TODO:需要加入INI配置 DONE

DSAutoTestAgent.MaxRetryTime = 3
DSAutoTestAgent.CurRetryTime = 0

DSAutoTestAgent.OnlinelineUpID = 10

function Global_SetDSAutoAgentSwitch(bGlobalSwitch,bLoginAndInitTeam,bAutoSwitchMap,AgentTeamSize,bRunNullRhi,bRandomLoop,bRunLoop,sPlayerTokenPrefix)
    DSAutoTestAgent.bOpenAutoAgent=bGlobalSwitch
    DSCommonError.tfPrintf("INFO","DSAutoTestAgent Global_SetDSAutoAgentSwitch bGlobalSwitch:%s", tostring(bGlobalSwitch))
    DSAutoTestAgent.bLoginAndInitTeam=bLoginAndInitTeam
    DSCommonError.tfPrintf("INFO","DSAutoTestAgent Global_SetDSAutoAgentSwitch bLoginAndInitTeam:%s", tostring(bLoginAndInitTeam))
    DSAutoTestAgent.AutoSwitchMap = bAutoSwitchMap
    DSCommonError.tfPrintf("INFO","DSAutoTestAgent Global_SetDSAutoAgentSwitch bAutoSwitchMap:%s", tostring(bAutoSwitchMap))
    DSAutoTestAgent.TeamSize = AgentTeamSize
    DSCommonError.tfPrintf("INFO","DSAutoTestAgent Global_SetDSAutoAgentSwitch AgentTeamSize:%s", tostring(AgentTeamSize))
    DSAutoTestAgent.bRunNullRhi = bRunNullRhi
    DSCommonError.tfPrintf("INFO","DSAutoTestAgent Global_SetDSAutoAgentSwitch bRunNullRhi:%s", tostring(bRunNullRhi))
    DSAutoTestAgent.bRandomLoop = bRandomLoop
    DSCommonError.tfPrintf("INFO","DSAutoTestAgent Global_SetDSAutoAgentSwitch bRandomLoop:%s", tostring(bRandomLoop))
    DSAutoTestAgent.bRunLoop = bRunLoop
    DSCommonError.tfPrintf("INFO","DSAutoTestAgent Global_SetDSAutoAgentSwitch bRunLoop:%s", tostring(bRunLoop))
    if sPlayerTokenPrefix and sPlayerTokenPrefix ~= "" then
        DSAutoTestAgent.G_TokenPrefix = sPlayerTokenPrefix
    end
    DSCommonError.tfPrintf("INFO","DSAutoTestAgent Global_SetDSAutoAgentSwitch G_TokenPrefix:%s", DSAutoTestAgent.G_TokenPrefix)
end


function Global_GetNextOnlinelevelMapid()
    if DSCommonfunc.currentMapIdIndex > #DSCommonfunc.MapIdList then
        return -1,-1
    end
    return DSCommonfunc.MapIdList[DSCommonfunc.currentMapIdIndex],DSCommonfunc.currentMapIdIndex
end

function DSAutoTestAgent.SetTeamChar(tCharacterList)
    for i = 1,#DSAutoTestAgent.lineupCharlist do
        if tCharacterList:IsValidIndex(i) then
            DSAutoTestAgent.lineupCharlist[i] = tCharacterList:Get(i)
        end
        DSCommonError.tfPrintf("INFO","DSAutoTestAgent SetTeamChar lineupChar %d:%d", i, DSAutoTestAgent.lineupCharlist[i])
    end
    DSCommonError.tfPrint("INFO","DSAutoTestAgent SetTeamChar lineupCharlist Num :", tCharacterList:Num())
end

function DSAutoTestAgent.SetForceMaplist(tForceMapList,isForce)
    DSAutoTestAgent.bIsForceMapList = isForce
    DSCommonError.tfPrint("INFO","DSAutoTestAgent SetForceMaplist isForce :", isForce)
    if isForce then
        DSCommonfunc.MapIdList = {}
        local mapliststr = ''
        for i = 1,tForceMapList:Length() do
            DSCommonfunc.MapIdList[i] = tForceMapList:Get(i)
            if i == 1 then
                mapliststr = mapliststr .. DSCommonfunc.MapIdList[i]
            else
                mapliststr = mapliststr .. ", " .. DSCommonfunc.MapIdList[i]
            end
        end
        DSCommonError.tfPrint("INFO","DSAutoTestAgent SetForceMaplist mapliststr :", mapliststr)
    end
    DSCommonError.tfPrint("INFO","DSAutoTestAgent DSCommonfunc.MapIdList :", table.concat(DSCommonfunc.MapIdList,","))
end

function DSAutoTestAgent.OpenAutoAgent(UmgLoginPC)
    DSCommonError.tfPrintf("INFO","DSAutoTestAgent.OpenAutoAgent")
    if not UmgLoginPC then
        DSCommonError.tfPrintf("ERROR","DSAutoTestAgent.OpenAutoAgent UmgLoginPC is nil")
        return
    end
    
    if (not DSAutoTestAgent.bOpenAutoAgent) then
        UE4.Timer.Add(5, function()
            DSAutoTestAgent.CurRetryTime = DSAutoTestAgent.CurRetryTime + 1
            if DSAutoTestAgent.CurRetryTime < DSAutoTestAgent.MaxRetryTime then
                DSAutoTestAgent.OpenAutoAgent(UmgLoginPC)
            end
        end)
        return
    end

    if (not DSAutoTestAgent.bLoginAndInitTeam) then
        DSCommonError.tfPrintf("WARNING","DSAutoTestAgent.bLoginAndInitTeam is false")
        return
    end

    UE4.UDsProfileFunctionLib.RecordSnakeState("ClientStart_Entry")
    UmgLoginPC.DeltaTime = 0
    DSAutoTestAgent.iDsMapID = UE4.UDsProfileFunctionLib.GetCommandLineByMapId()
    DSAutoTestAgent.iDsEndMapID = UE4.UDsProfileFunctionLib.GetCommandLineByEndMapId()
    DSAutoTestAgent.iSpecifyTime = UE4.UDsProfileFunctionLib.GetRunMapTimes()
    DSAutoTestAgent.iStartTime = UE4.UDsProfileFunctionLib.GetCommandLineByStartTime()
    if DSAutoTestAgent.iStartTime > 0 then
        DSCommonError.tfPrintf("INFO","设置了开启房间时间%d  %s",DSAutoTestAgent.iStartTime,os.date("%Y-%m-%d %H:%M:%S", DSAutoTestAgent.iStartTime))
    end
    local dsserverip = UE4.UDsProfileFunctionLib.GetCommandLineByServerIP()
    if (not dsserverip) or (dsserverip == "") then
        dsserverip = "10.11.85.147"
    end

    if DSAutoTestAgent.bIsLogined == 0 then
        local pid = tonumber(UE4.UDsProfileFunctionLib.GetCommandLineByPlayerId())
        if pid <= 0 then
            pid = tonumber(os.time() .. UE4.UKismetMathLibrary.GetMillisecond(UE4.UKismetMathLibrary.Now()))
            DSAutoTestAgent.bSpecifyPlayerId = false
        end
        DSAutoTestAgent.G_TokenPid = pid

        local sToken =  string.format("%s%d",DSAutoTestAgent.G_TokenPrefix, pid)
        DSAutoTestAgent.LoginToken = sToken
        UE4.UUserSetting.SetString('LoginToken', sToken)
        if UmgLoginPC.tbLoginParam == nil then
            UE4.UGameLibrary.RequestLoginParameter("");
            UmgLoginPC.tbLoginParam = UmgLoginPC.tbLoginParam or {}
            UmgLoginPC.tbLoginParam.sProvider = "development"
        end
        UmgLoginPC.tbLoginParam.sToken = sToken

        Login.SetServer({ sName = "指定服", sAddr = dsserverip, nPort = 5200} )
        UE4.Timer.Add(5, function()
            UmgLoginPC:ConnectToServer();
            DSAutoTestAgent.bIsLogined = 1
            DSCommonError.tfPrintf("INFO","DSAutoTestAgent ConnectToServer()")
        end)
        UE4.Timer.Add(10, function()
            if not me:IsLogined() then
                UmgLoginPC:ConnectToServer();
                DSCommonError.tfPrintf("INFO","DSAutoTestAgent ConnectToServer22()")
            end
        end)
        UE4.Timer.Add(20, function()
            if not me:IsLogined() then
                UmgLoginPC:ConnectToServer();
                DSCommonError.tfPrintf("INFO","DSAutoTestAgent ConnectToServer33()")
            end
        end)
    else
        UE4.UUserSetting.SetString('LoginToken', DSAutoTestAgent.LoginToken)
        if UmgLoginPC.tbLoginParam == nil then
            UE4.UGameLibrary.RequestLoginParameter("");
            UmgLoginPC.tbLoginParam = UmgLoginPC.tbLoginParam or {}
            UmgLoginPC.tbLoginParam.sProvider = "development"
        end
        UmgLoginPC.tbLoginParam.sToken = DSAutoTestAgent.LoginToken

        Login.SetServer({ sName = "指定服", sAddr = dsserverip, nPort = 5200} )
        UE4.Timer.Add(5, function()
            UmgLoginPC:ConnectToServer();
            DSCommonError.tfPrintf("INFO","DSAutoTestAgent ConnectToServer111()")
        end)
        UE4.Timer.Add(10, function()
            if not me:IsLogined() then
                UmgLoginPC:ConnectToServer();
                DSCommonError.tfPrintf("INFO","DSAutoTestAgent ConnectToServer222()")
            end
        end)
        UE4.Timer.Add(20, function()
            if not me:IsLogined() then
                UmgLoginPC:ConnectToServer();
                DSCommonError.tfPrintf("INFO","DSAutoTestAgent ConnectToServer333()")
            end
        end)
    end
end

function DSAutoTestAgent.SetOnlineState(nState)
    if (not DSAutoTestAgent.bOpenAutoAgent) then
        return
    end

    if DSAutoTestAgent.G_OnlineAutoStatus ~= nil then
        DSAutoTestAgent.G_OnlineAutoStatus = nState
        DSCommonError.tfPrintf("INFO","DSAutoTestAgent.SetOnlineState %s", tostring(nState))
    end
end

function DSAutoTestAgent.OnServerError(uWorld, nFailureType, sErrorString)
    if (not DSAutoTestAgent.bOpenAutoAgent) then
        return
    end

    if (DSAutoTestAgent.bIsServerError == 0) then
        DSAutoTestAgent.bIsServerError = 1
        DSCommonError.DealServerError()
    end
end

function DSAutoTestAgent.UpdateOnline(nState, nParam1, nParam2, nParam3, nParam4)
    if nState == 5 then
        local bNewUp = false
        if nParam1  then
            DSAutoTestAgent.tbCaptain = DSAutoTestAgent.tbCaptain or Online.GetCaptain()
            local nOldNum = #DSAutoTestAgent.tbCaptain
            for i = 1, nParam1:Length() do
                DSAutoTestAgent.tbCaptain[i] = nParam1:Get(i)
            end

            if #DSAutoTestAgent.tbCaptain > nParam1:Length() then
                for i=nParam1:Length()+1,#DSAutoTestAgent.tbCaptain do
                    DSAutoTestAgent.tbCaptain[i] = nil
                end
            end

            -- local  tbConfig = Online.GetConfig(Online.GetOnlineId())
            -- if nOldNum ~= #DSAutoTestAgent.tbCaptain then
            --     bNewUp = true

            --     if DSAutoTestAgent.tbCaptain[1] then
            --         if self.MatchCheck:GetCheckedState() == 0 and tbConfig  and tbConfig.nMaxPlayer == nOldNum then
            --             if not UI.IsOpen("OnlineInvite") then
            --                 UI.Open("OnlineInvite", nil, nil, function () self:ClickMatchBtn(true) end)
            --             end
            --         end
            --     end
            -- end
        end

        if nParam2 then
            DSAutoTestAgent.tbStateFlag = DSAutoTestAgent.tbStateFlag or Online.GetStateFlag()
            local nSelfReady = DSAutoTestAgent.tbStateFlag[1]
            for i = 1, nParam2:Length() do
                DSAutoTestAgent.tbStateFlag[i] = nParam2:Get(i)
            end

            if #DSAutoTestAgent.tbStateFlag > nParam2:Length() then
                for i=nParam2:Length()+1,#DSAutoTestAgent.tbStateFlag do
                    DSAutoTestAgent.tbStateFlag[i] = nil
                end
            end

            if nSelfReady ~= DSAutoTestAgent.tbStateFlag[1] then
                if  DSAutoTestAgent.tbStateFlag[1] < Online.Player_State_Ready then
                    Online.SetOnlineState(Online.STATUS_OPEN)
                end
            end
        end

        if nParam4 then
            Online.SetWeekBuff(nParam4)
        end
        
    elseif nState == 15 then
        if nParam2 then
            DSAutoTestAgent.tbStateFlag = DSAutoTestAgent.tbStateFlag or Online.GetStateFlag()
            for i = 1, nParam2:Length() do
                local nReadyFlag = nParam2:Get(i)
                if nReadyFlag >= 0 then
                    DSAutoTestAgent.tbStateFlag[i] = nReadyFlag
                end
            end
        end
    elseif nState ==2 then
        Online.SetMatchState(nParam1)
    end
end


function DSAutoTestAgent.OnReceiveOnlineEvent(nErrCode, nState, nParam1, nParam2, nParam3, nParam4)
    if (not DSAutoTestAgent.bOpenAutoAgent) then
        return
    end

    -- if (nState == 6 or nState == 4 or nState == 14 or nState == 5 or nState == 15) then
        DSAutoTestAgent.nState = nState
        DSAutoTestAgent.nParam1 = nParam1
    -- end

    if nErrCode > 0 then
        DSAutoTestAgent.nErrCode = nErrCode
        return
    end

    if nState == 0 then
        -- 机器人处理
        if DSAutoTestAgent.WaitRSP == 1 then
            DSAutoTestAgent.WaitRSP = 0
        end
    elseif nState == 1 then
    elseif nState == 4 then
        if nParam1 and nParam1 == 0 then
            -- 机器人处理
            DSAutoTestAgent.WaitRSP = 0
            -- DSAutoTestAgent.startmatch = 0
        end
    elseif nState == 6 then
    elseif nState == 7 then
    elseif nState == 10 then
    elseif nState == 11 then
    elseif nState == 12 then
    elseif nState == 14 then
    else -- 2,5,15
        --机器人处理
        DSAutoTestAgent.UpdateOnline(nState, nParam1, nParam2, nParam3, nParam4)
    end
end

-- todo:umg没有开启tick,目前无效
function DSAutoTestAgent.Tick(UmgLoginPC, InDeltaTime)
    if (not DSAutoTestAgent.bOpenAutoAgent) then
        return
    end

    UmgLoginPC.DeltaTime = UmgLoginPC.DeltaTime + InDeltaTime
    if UmgLoginPC.DeltaTime >= 10.0 then
        UmgLoginPC:ConnectToServer()
        UmgLoginPC.DeltaTime = 0
        DSCommonError.tfPrintf("INFO","======= tbClass:Tick self:ConnectToServer()@@@!!!!")
    end
end

-- 机器人处理 捕获重连提示
function DSAutoTestAgent.CheckReconnect()
    if (not DSAutoTestAgent.bOpenAutoAgent) then
        return
    end
    
    DSCommonError.tfPrint("INFO","===================DSAutoTestAgent CheckReconnect !!!===================")
    -- 自定义处理逻辑
    Online.ReconnectReq(1)
    DSCommonError.tfPrint("INFO","===================DSAutoTestAgent CancelReconnect222 !!!===================")
end

-- 摧毁建筑物触发 todo:目前无效,仅服务端使用？
EventSystem.On("DestructibleOnDestroy", function(InObject)
    DSCommonError.tfPrint("INFO","===================DSAutoTestAgent DestructibleOnDestroy1111 !!!===================")
    if DSAutoTestAgent.bOpenAutoAgent then
        DSCommonError.tfPrint("INFO","===================DSAutoTestAgent DestructibleOnDestroy !!!===================")
        if InObject then
            DSCommonError.tfPrint("INFO","===================DSAutoTestAgent DestructibleOnDestroy222 !!!===================")
        end
    end
end)